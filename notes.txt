# # # # #
A ideia é fazer os modais utilizando componentização para deixar o código mais limpo e mais fácil de fazer alterações,
porém ainda não consegui pensar em um jeito efetivo de fazer isso.
# # # # #

3. Arrumar estilização dos componentes
    Provavelmente vou incluir 'Sass' e alterar a raiz das variáveis do bootstrap para alterar as cores
    - P. Marcelino

# # #
CODIGO DA LOGICA DE COLOCAR FUNDO DINAMICO NA QUANTIDADE DE PRODUTOS

<?php if ($produto["quantidade"] < $produto["minimo"]) { ?>
    style="background-color: red" 
<?php } else if ($produto["quantidade"] < (($produto["minimo"] + $produto["maximo"]) / 2)) { ?>
    style="background-color: yellow" 
<?php } else {?>
    style="background-color: green" 
<?php } ?>
# # #

# # #
SEQUENCIA DE CODIGOS PARA ATUALIZAR REPOSITÓRIO

ATUALIZAR O "testes"

1. git stash (guarda suas alterações)
2. git pull origin testes (recebe o repositório atualizado)
3.1. git stash apply (coloca suas alterações dentro do repositório atualizado)
3.2. git stash drop (descarta suas alterações)

git pull origin main (atualizar com tudo que está no git)

git add . (criar ou deletar um arquivo)

git commit -a -m "o que foi feito nesse commit" (registrar no git)

git branch -m testes/main (vai depender pra onde quer enviar)

git pull origin testes/main (para pegar tudo o que foi atualizado antes de fazer) (FAZER ANTES DO PUSH QUANDO O PULL DER ERRADO)

git push origin testes/main (mandar pro repositorio)

# # #